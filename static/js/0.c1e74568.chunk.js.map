{"version":3,"file":"static/js/0.c1e74568.chunk.js","mappings":"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","sources":["components/FormGenerator/FormGenerator.styled.jsx","components/FormGenerator/FormGenerator.jsx","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/Contact.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Button, Input } from '@chakra-ui/react';\nimport '@fontsource/inconsolata';\n\nexport const H1 = styled.h1`\n  margin-bottom: 32px;\n\n  font-size: 32px;\n  text-align: center;\n`;\n\nexport const Form = styled.form`\n  width: 500px;\n  margin: 90px auto;\n  padding: 20px 50px;\n\n  background-color: #fff3;\n\n  border-radius: 25px;\n`;\n\nexport const Label = styled.label`\n  font-size: 24px;\n`;\n\nexport const Inpt = styled(Input)`\n  margin-bottom: 32px;\n\n  font-family: 'Inconsolata';\n  font-size: 20px;\n\n  &:focus-visible {\n    border-color: purple;\n    box-shadow: 0px 1px 0px 0px purple;\n  }\n`;\n\nexport const Btn = styled(Button)`\n  display: block;\n  margin: 0 auto 24px;\n`;\n\nexport const P = styled.p`\n  text-align: center;\n`;\n\nexport const Span = styled.span`\n  margin-left: 8px;\n\n  font-weight: 700;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: teal;\n  }\n`;\n","import { H1, Form, Label, Inpt, Btn, P, Span } from './FormGenerator.styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const FormGenerator = ({ type, onSubmit, onFilterChange }) => {\n  if (type === 'login') {\n    return (\n      <Form autoComplete=\"off\">\n        <H1>Welcome Back</H1>\n\n        <Label>\n          Email\n          <Inpt name=\"email\" variant=\"flushed\" />\n        </Label>\n\n        <Label>\n          Password\n          <Inpt name=\"password\" variant=\"flushed\" />\n        </Label>\n\n        <Btn colorScheme=\"blackAlpha\" type=\"submit\">\n          Login\n        </Btn>\n\n        <P>\n          Do not have an account?\n          <Span>\n            <NavLink to=\"/register\">Register</NavLink>\n          </Span>\n        </P>\n      </Form>\n    );\n  }\n\n  if (type === 'register') {\n    return (\n      <Form autoComplete=\"off\">\n        <H1>Create an account</H1>\n        <Label>\n          Name\n          <Inpt name=\"name\" variant=\"flushed\" />\n        </Label>\n\n        <Label>\n          Email\n          <Inpt name=\"email\" variant=\"flushed\" />\n        </Label>\n\n        <Label>\n          Password\n          <Inpt name=\"password\" variant=\"flushed\" />\n        </Label>\n\n        <Btn colorScheme=\"blackAlpha\" type=\"submit\">\n          Create Account\n        </Btn>\n\n        <P>\n          Already have an account?\n          <Span>\n            <NavLink to=\"/login\">Sign in</NavLink>\n          </Span>\n        </P>\n      </Form>\n    );\n  }\n  if (type === 'contacts') {\n    return (\n      <Form onSubmit={onSubmit} autoComplete=\"off\">\n        <Label>\n          Name\n          <Inpt\n            type=\"text\"\n            name=\"name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            variant=\"flushed\"\n          />\n        </Label>\n\n        <Label>\n          Number\n          <Inpt\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            variant=\"flushed\"\n          />\n        </Label>\n\n        <Btn\n          type=\"submit\"\n          colorScheme=\"blackAlpha\"\n          style={{ margin: '0 auto' }}\n        >\n          Add contact\n        </Btn>\n      </Form>\n    );\n  }\n\n  if (type === 'filter') {\n    return (\n      <Form>\n        <Label>\n          Find contacts by name\n          <Inpt type=\"text\" variant=\"flushed\" onChange={onFilterChange} />\n        </Label>\n      </Form>\n    );\n  }\n};\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = state =>\n  selectContacts(state).filter(el =>\n    el.name.toLowerCase().includes(selectFilterValue(state))\n  );\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\nimport { warning } from 'components/notify';\nimport { FormGenerator } from 'components/FormGenerator';\n\nexport const ContactForm = ({ toggle }) => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const name = form.name.value.trim();\n    const phone = form.number.value;\n    const isInContacts = contacts.some(el => el.name === name);\n\n    if (isInContacts) {\n      warning(name);\n\n      return;\n    }\n    dispatch(addContact({ name, phone }));\n\n    toggle();\n\n    form.reset();\n  };\n\n  return <FormGenerator type={'contacts'} onSubmit={handleFormSubmit} />;\n};\n","import { FormGenerator } from 'components/FormGenerator';\nimport { useDispatch } from 'react-redux';\nimport { write } from 'redux/filterSlice/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilterChange = e => {\n    const filterValue = e.target.value.toLowerCase();\n\n    dispatch(write(filterValue));\n  };\n\n  return <FormGenerator type={'filter'} onFilterChange={onFilterChange} />;\n};\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  backdrop-filter: blur(10px);\n`;\n\nexport const Window = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport { Backdrop, Window } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ children, toggle }) => {\n  useEffect(() => {\n    const onEscPush = e => {\n      if (e.code === 'Escape') {\n        toggle();\n      }\n    };\n\n    window.addEventListener('keydown', onEscPush);\n\n    return () => {\n      window.removeEventListener('keydown', onEscPush);\n    };\n  }, [toggle]);\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      toggle();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <Window>{children}</Window>\n    </Backdrop>,\n    modalRoot\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Li = styled.li`\n  display: flex;\n  font-size: 20px;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { useState } from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { Li } from './ContactListItem.styled';\nimport { Button } from '@chakra-ui/react';\n\nconst ContactListItem = ({ data }) => {\n  const { name, phone, id } = data;\n\n  const dispatch = useDispatch();\n\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  return (\n    <Li>\n      <p>\n        {name}: {phone}\n      </p>\n      <Button\n        type=\"button\"\n        onClick={e => {\n          dispatch(deleteContact(id));\n          setIsDeleting(true);\n        }}\n        disabled={isDeleting}\n        colorScheme=\"blackAlpha\"\n      >\n        {isDeleting ? (\n          <ThreeDots\n            height=\"10\"\n            width=\"42\"\n            radius=\"9\"\n            color=\"#ffffff\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClassName=\"\"\n            visible={true}\n          />\n        ) : (\n          <p>Delete</p>\n        )}\n      </Button>\n    </Li>\n  );\n};\n\nexport default ContactListItem;\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  width: 400px;\n  margin: 0 auto;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations';\nimport { useEffect } from 'react';\nimport ContactListItem from 'components/ContactListItem';\nimport { Ul } from './Contact.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Ul>\n      {visibleContacts.map(data => (\n        <ContactListItem key={data.id} data={data} />\n      ))}\n    </Ul>\n  );\n};\n","import { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { Modal } from 'components/Modal';\nimport { ContactList } from 'components/ContactList';\nimport { useState } from 'react';\nimport { Button } from '@chakra-ui/react';\n\nconst Contacts = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    setIsOpen(prevState => !prevState);\n  };\n\n  return (\n    <>\n      <Button colorScheme=\"blackAlpha\" onClick={toggle}>\n        Add new contact\n      </Button>\n      {isOpen && (\n        <Modal toggle={toggle}>\n          <ContactForm toggle={toggle} />\n        </Modal>\n      )}\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["H1","styled","Form","Label","Inpt","Input","Btn","Button","P","Span","FormGenerator","type","onSubmit","onFilterChange","autoComplete","name","variant","colorScheme","to","title","required","pattern","style","margin","onChange","selectContacts","state","contacts","items","selectVisibleContacts","filter","el","toLowerCase","includes","selectFilterValue","ContactForm","toggle","useSelector","dispatch","useDispatch","e","preventDefault","form","currentTarget","value","trim","phone","number","some","warning","addContact","reset","Filter","filterValue","target","write","Backdrop","Window","modalRoot","document","querySelector","Modal","children","useEffect","onEscPush","code","window","addEventListener","removeEventListener","createPortal","onClick","Li","data","id","useState","isDeleting","setIsDeleting","deleteContact","disabled","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","Ul","ContactList","visibleContacts","fetchContacts","map","isOpen","setIsOpen","prevState"],"sourceRoot":""}