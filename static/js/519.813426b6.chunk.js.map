{"version":3,"file":"static/js/519.813426b6.chunk.js","mappings":"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","sources":["components/FormGenerator/FormGenerator.styled.jsx","components/FormGenerator/FormGenerator.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx","../node_modules/@chakra-ui/form-control/dist/chunk-6ZNYZUDD.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-IJBC3YLI.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Button, Input } from '@chakra-ui/react';\nimport '@fontsource/inconsolata';\n\nexport const H1 = styled.h1`\n  margin-bottom: 32px;\n\n  font-size: 32px;\n  text-align: center;\n`;\n\nexport const Form = styled.form`\n  width: 500px;\n  margin: 90px auto;\n  padding: 20px 50px;\n\n  background-color: #fff3;\n\n  border-radius: 25px;\n`;\n\nexport const Label = styled.label`\n  font-size: 24px;\n`;\n\nexport const Inpt = styled(Input)`\n  margin-bottom: 32px;\n\n  font-family: 'Inconsolata';\n  font-size: 20px;\n\n  &:focus-visible {\n    border-color: purple;\n    box-shadow: 0px 1px 0px 0px purple;\n  }\n`;\n\nexport const Btn = styled(Button)`\n  display: block;\n  margin: 0 auto 24px;\n`;\n\nexport const P = styled.p`\n  text-align: center;\n`;\n\nexport const Span = styled.span`\n  margin-left: 8px;\n\n  font-weight: 700;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: teal;\n  }\n`;\n","import { H1, Form, Label, Inpt, Btn, P, Span } from './FormGenerator.styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const FormGenerator = ({ type, onSubmit, onFilterChange }) => {\n  if (type === 'login') {\n    return (\n      <Form autoComplete=\"off\">\n        <H1>Welcome Back</H1>\n\n        <Label>\n          Email\n          <Inpt name=\"email\" variant=\"flushed\" />\n        </Label>\n\n        <Label>\n          Password\n          <Inpt name=\"password\" variant=\"flushed\" />\n        </Label>\n\n        <Btn colorScheme=\"blackAlpha\" type=\"submit\">\n          Login\n        </Btn>\n\n        <P>\n          Do not have an account?\n          <Span>\n            <NavLink to=\"/register\">Register</NavLink>\n          </Span>\n        </P>\n      </Form>\n    );\n  }\n\n  if (type === 'register') {\n    return (\n      <Form autoComplete=\"off\">\n        <H1>Create an account</H1>\n        <Label>\n          Name\n          <Inpt name=\"name\" variant=\"flushed\" />\n        </Label>\n\n        <Label>\n          Email\n          <Inpt name=\"email\" variant=\"flushed\" />\n        </Label>\n\n        <Label>\n          Password\n          <Inpt name=\"password\" variant=\"flushed\" />\n        </Label>\n\n        <Btn colorScheme=\"blackAlpha\" type=\"submit\">\n          Create Account\n        </Btn>\n\n        <P>\n          Already have an account?\n          <Span>\n            <NavLink to=\"/login\">Sign in</NavLink>\n          </Span>\n        </P>\n      </Form>\n    );\n  }\n  if (type === 'contacts') {\n    return (\n      <Form onSubmit={onSubmit} autoComplete=\"off\">\n        <Label>\n          Name\n          <Inpt\n            type=\"text\"\n            name=\"name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            variant=\"flushed\"\n          />\n        </Label>\n\n        <Label>\n          Number\n          <Inpt\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            variant=\"flushed\"\n          />\n        </Label>\n\n        <Btn\n          type=\"submit\"\n          colorScheme=\"blackAlpha\"\n          style={{ margin: '0 auto' }}\n        >\n          Add contact\n        </Btn>\n      </Form>\n    );\n  }\n\n  if (type === 'filter') {\n    return (\n      <Form>\n        <Label>\n          Find contacts by name\n          <Inpt type=\"text\" variant=\"flushed\" onChange={onFilterChange} />\n        </Label>\n      </Form>\n    );\n  }\n};\n","import { FormGenerator } from 'components/FormGenerator';\nexport const RegisterForm = () => {\n  return <FormGenerator type={'register'} />;\n};\n","import { RegisterForm } from 'components/RegisterForm';\n\nconst Register = () => {\n  return <RegisterForm />;\n};\n\nexport default Register;\n","// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props2.id !== void 0 ? props2.id : labelId,\n      htmlFor: props2.htmlFor !== void 0 ? props2.htmlFor : id\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n","import {\n  useFormControlContext\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n"],"names":["H1","styled","Form","Label","Inpt","Input","Btn","Button","P","Span","FormGenerator","type","onSubmit","onFilterChange","autoComplete","name","variant","colorScheme","to","title","required","pattern","style","margin","onChange","RegisterForm","createContext","errorMessage","FormControlStylesProvider","useFormControlStyles","strict","FormControlProvider","useFormControlContext","FormControl","forwardRef","props","ref","styles","useMultiStyleConfig","idProp","id","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","useState","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","mergeRefs","node","getLabelProps","dataAttr","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","onBlur","useFormControlProvider","omitThemingProps","context","className","cx","jsx","value","chakra","__css","displayName","field","helperText","useFormControl","_a","_b","_c","disabled","readOnly","rest","labelIds","push","join","callAllHandlers","useFormControlProps","ariaAttr","htmlSize","input","_className","size"],"sourceRoot":""}