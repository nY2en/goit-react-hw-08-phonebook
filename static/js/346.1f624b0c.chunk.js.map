{"version":3,"file":"static/js/346.1f624b0c.chunk.js","mappings":"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","sources":["components/FormGenerator/FormGenerator.styled.jsx","components/FormGenerator/FormGenerator.jsx","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Button, Input } from '@chakra-ui/react';\nimport '@fontsource/inconsolata';\n\nexport const H1 = styled.h1`\n  margin-bottom: 32px;\n\n  font-size: 32px;\n  text-align: center;\n`;\n\nexport const Form = styled.form`\n  width: 500px;\n  margin: 90px auto;\n  padding: 20px 50px;\n\n  background-color: #fff3;\n\n  border-radius: 25px;\n`;\n\nexport const Label = styled.label`\n  font-size: 24px;\n`;\n\nexport const Inpt = styled(Input)`\n  margin-bottom: 32px;\n\n  font-family: 'Inconsolata';\n  font-size: 20px;\n\n  &:focus-visible {\n    border-color: purple;\n    box-shadow: 0px 1px 0px 0px purple;\n  }\n`;\n\nexport const Btn = styled(Button)`\n  display: block;\n  margin: 0 auto 24px;\n`;\n\nexport const P = styled.p`\n  text-align: center;\n`;\n\nexport const Span = styled.span`\n  margin-left: 8px;\n\n  font-weight: 700;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: teal;\n  }\n`;\n","import { H1, Form, Label, Inpt, Btn, P, Span } from './FormGenerator.styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const FormGenerator = ({ type, onSubmit, onFilterChange }) => {\n  if (type === 'login') {\n    return (\n      <Form autoComplete=\"off\">\n        <H1>Welcome Back</H1>\n\n        <Label>\n          Email\n          <Inpt name=\"email\" variant=\"flushed\" />\n        </Label>\n\n        <Label>\n          Password\n          <Inpt name=\"password\" variant=\"flushed\" />\n        </Label>\n\n        <Btn colorScheme=\"blackAlpha\" type=\"submit\">\n          Login\n        </Btn>\n\n        <P>\n          Do not have an account?\n          <Span>\n            <NavLink to=\"/register\">Register</NavLink>\n          </Span>\n        </P>\n      </Form>\n    );\n  }\n\n  if (type === 'register') {\n    return (\n      <Form autoComplete=\"off\">\n        <H1>Create an account</H1>\n        <Label>\n          Name\n          <Inpt name=\"name\" variant=\"flushed\" />\n        </Label>\n\n        <Label>\n          Email\n          <Inpt name=\"email\" variant=\"flushed\" />\n        </Label>\n\n        <Label>\n          Password\n          <Inpt name=\"password\" variant=\"flushed\" />\n        </Label>\n\n        <Btn colorScheme=\"blackAlpha\" type=\"submit\">\n          Create Account\n        </Btn>\n\n        <P>\n          Already have an account?\n          <Span>\n            <NavLink to=\"/login\">Sign in</NavLink>\n          </Span>\n        </P>\n      </Form>\n    );\n  }\n  if (type === 'contacts') {\n    return (\n      <Form onSubmit={onSubmit} autoComplete=\"off\">\n        <Label>\n          Name\n          <Inpt\n            type=\"text\"\n            name=\"name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            variant=\"flushed\"\n          />\n        </Label>\n\n        <Label>\n          Number\n          <Inpt\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            variant=\"flushed\"\n          />\n        </Label>\n\n        <Btn\n          type=\"submit\"\n          colorScheme=\"blackAlpha\"\n          style={{ margin: '0 auto' }}\n        >\n          Add contact\n        </Btn>\n      </Form>\n    );\n  }\n\n  if (type === 'filter') {\n    return (\n      <Form>\n        <Label>\n          Find contacts by name\n          <Inpt type=\"text\" variant=\"flushed\" onChange={onFilterChange} />\n        </Label>\n      </Form>\n    );\n  }\n};\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = state =>\n  selectContacts(state).filter(el =>\n    el.name.toLowerCase().includes(selectFilterValue(state))\n  );\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\nimport { warning } from 'components/notify';\nimport { FormGenerator } from 'components/FormGenerator';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const name = form.name.value;\n    const number = form.number.value;\n    const isInContacts = contacts.some(el => el.name === name);\n\n    console.log(name);\n    if (isInContacts) {\n      warning(name);\n\n      return;\n    }\n    dispatch(addContact({ name, number }));\n\n    form.reset();\n  };\n\n  return <FormGenerator type={'contacts'} onSubmit={handleFormSubmit} />;\n};\n","import { FormGenerator } from 'components/FormGenerator';\nimport { useDispatch } from 'react-redux';\nimport { write } from 'redux/filterSlice/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilterChange = e => {\n    const filterValue = e.target.value.toLowerCase();\n\n    dispatch(write(filterValue));\n  };\n\n  return <FormGenerator type={'filter'} onFilterChange={onFilterChange} />;\n};\n","import styled from '@emotion/styled';\n\nexport const Li = styled.li`\n  display: flex;\n  font-size: 20px;\n  justify-content: space-between;\n  width: 400px;\n  align-items: center;\n  margin-bottom: 8px;\n`;\n\nexport const Span = styled.span`\n  width: 5px;\n  height: 5px;\n  display: block;\n  background-color: black;\n  border-radius: 50%;\n`;\n\nexport const Button = styled.button`\n  background-color: #ffffff;\n  border: 1px solid gray;\n  border-radius: 5px;\n  padding: 4px;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: gray;\n    color: #ffffff;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { useState } from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { Li, Span, Button } from './ContactListItem.styled';\n\nconst ContactListItem = ({ data }) => {\n  const { name, number, id } = data;\n\n  const dispatch = useDispatch();\n\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  return (\n    <Li>\n      <Span></Span>\n      <p>\n        {name}: {number}\n      </p>\n      <Button\n        type=\"button\"\n        onClick={e => {\n          dispatch(deleteContact(id));\n          setIsDeleting(true);\n        }}\n        disabled={isDeleting}\n      >\n        {isDeleting ? (\n          <ThreeDots\n            height=\"10\"\n            width=\"35\"\n            radius=\"9\"\n            color=\"#ffffff\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClassName=\"\"\n            visible={true}\n          />\n        ) : (\n          <p>Delete</p>\n        )}\n      </Button>\n    </Li>\n  );\n};\n\nexport default ContactListItem;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations';\nimport { useEffect } from 'react';\nimport ContactListItem from 'components/ContactListItem';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {visibleContacts.map(data => (\n        <ContactListItem key={data.id} data={data} />\n      ))}\n    </ul>\n  );\n};\n\n\n","import { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\n\nconst Contacts = () => {\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["H1","styled","Form","Label","Inpt","Input","Btn","Button","P","Span","FormGenerator","type","onSubmit","onFilterChange","autoComplete","name","variant","colorScheme","to","title","required","pattern","style","margin","onChange","selectContacts","state","contacts","items","selectVisibleContacts","filter","el","toLowerCase","includes","selectFilterValue","ContactForm","useSelector","dispatch","useDispatch","e","preventDefault","form","currentTarget","value","number","isInContacts","some","console","log","warning","addContact","reset","Filter","filterValue","target","write","Li","data","id","useState","isDeleting","setIsDeleting","onClick","deleteContact","disabled","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","ContactList","visibleContacts","useEffect","fetchContacts","map"],"sourceRoot":""}