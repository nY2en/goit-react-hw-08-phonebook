{"version":3,"file":"static/js/187.59493bfc.chunk.js","mappings":"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","sources":["components/FormGenerator/FormGenerator.styled.jsx","components/FormGenerator/FormGenerator.jsx","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/Contact.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Button, Input } from '@chakra-ui/react';\nimport '@fontsource/inconsolata';\n\nexport const H1 = styled.h1`\n  margin-bottom: 32px;\n\n  font-size: 32px;\n  text-align: center;\n`;\n\nexport const Form = styled.form`\n  width: 500px;\n  margin: 90px auto;\n  padding: 20px 50px;\n\n  background-color: #fff3;\n\n  border-radius: 25px;\n`;\n\nexport const Label = styled.label`\n  font-size: 24px;\n`;\n\nexport const Inpt = styled(Input)`\n  margin-bottom: 32px;\n\n  font-family: 'Inconsolata';\n  font-size: 20px;\n\n  &:focus-visible {\n    border-color: purple;\n    box-shadow: 0px 1px 0px 0px purple;\n  }\n`;\n\nexport const Btn = styled(Button)`\n  display: block;\n  margin: 0 auto 24px;\n`;\n\nexport const P = styled.p`\n  text-align: center;\n`;\n\nexport const Span = styled.span`\n  margin-left: 8px;\n\n  font-weight: 700;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: teal;\n  }\n`;\n","import { H1, Form, Label, Inpt, Btn, P, Span } from './FormGenerator.styled';\nimport { NavLink } from 'react-router-dom';\n\nimport { useState } from 'react';\nimport { InputGroup, InputRightElement, Button } from '@chakra-ui/react';\n\nconst PasswordInput = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n\n  return (\n    <label>\n      Password\n      <InputGroup size=\"md\">\n        <Inpt\n          pr=\"4.5rem\"\n          type={show ? 'text' : 'password'}\n          name=\"password\"\n          variant=\"flushed\"\n        />\n        <InputRightElement width=\"4.5rem\">\n          <Button size=\"xs\" onClick={handleClick} colorScheme=\"blackAlpha\">\n            {show ? 'Hide' : 'Show'}\n          </Button>\n        </InputRightElement>\n      </InputGroup>\n    </label>\n  );\n};\n\nexport const FormGenerator = ({ type, onSubmit, onFilterChange }) => {\n  if (type === 'login') {\n    return (\n      <Form autoComplete=\"off\">\n        <H1>Welcome Back</H1>\n\n        <Label>\n          Email\n          <Inpt name=\"email\" variant=\"flushed\" />\n        </Label>\n\n        <Label>\n          <PasswordInput />\n        </Label>\n\n        <Btn colorScheme=\"blackAlpha\" type=\"submit\">\n          Login\n        </Btn>\n\n        <P>\n          Do not have an account?\n          <Span>\n            <NavLink to=\"/register\">Register</NavLink>\n          </Span>\n        </P>\n      </Form>\n    );\n  }\n\n  if (type === 'register') {\n    return (\n      <Form autoComplete=\"off\">\n        <H1>Create an account</H1>\n        <Label>\n          Name\n          <Inpt name=\"name\" variant=\"flushed\" />\n        </Label>\n\n        <Label>\n          Email\n          <Inpt name=\"email\" variant=\"flushed\" />\n        </Label>\n\n        <Label>\n          Password\n          <Inpt name=\"password\" variant=\"flushed\" />\n        </Label>\n\n        <Btn colorScheme=\"blackAlpha\" type=\"submit\">\n          Create Account\n        </Btn>\n\n        <P>\n          Already have an account?\n          <Span>\n            <NavLink to=\"/login\">Sign in</NavLink>\n          </Span>\n        </P>\n      </Form>\n    );\n  }\n  if (type === 'contacts') {\n    return (\n      <Form onSubmit={onSubmit} autoComplete=\"off\">\n        <Label>\n          Name\n          <Inpt\n            type=\"text\"\n            name=\"name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            variant=\"flushed\"\n          />\n        </Label>\n\n        <Label>\n          Number\n          <Inpt\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            variant=\"flushed\"\n          />\n        </Label>\n\n        <Btn\n          type=\"submit\"\n          colorScheme=\"blackAlpha\"\n          style={{ margin: '0 auto' }}\n        >\n          Add contact\n        </Btn>\n      </Form>\n    );\n  }\n\n  if (type === 'filter') {\n    return (\n      <Form style={{ margin: '40px auto' }}>\n        <Label>\n          Find contacts by name\n          <Inpt type=\"text\" variant=\"flushed\" onChange={onFilterChange} />\n        </Label>\n      </Form>\n    );\n  }\n};\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = state =>\n  selectContacts(state).filter(el =>\n    el.name.toLowerCase().includes(selectFilterValue(state))\n  );\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\nimport { warning } from 'components/notify';\nimport { FormGenerator } from 'components/FormGenerator';\n\nexport const ContactForm = ({ toggle }) => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const name = form.name.value.trim();\n    const phone = form.number.value;\n    const isInContacts = contacts.some(el => el.name === name);\n\n    if (isInContacts) {\n      warning(name);\n\n      return;\n    }\n    dispatch(addContact({ name, phone }));\n\n    toggle();\n\n    form.reset();\n  };\n\n  return <FormGenerator type={'contacts'} onSubmit={handleFormSubmit} />;\n};\n","import { FormGenerator } from 'components/FormGenerator';\nimport { useDispatch } from 'react-redux';\nimport { write } from 'redux/filterSlice/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilterChange = e => {\n    const filterValue = e.target.value.toLowerCase();\n\n    dispatch(write(filterValue));\n  };\n\n  return <FormGenerator type={'filter'} onFilterChange={onFilterChange} />;\n};\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  backdrop-filter: blur(10px);\n`;\n\nexport const Window = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport { Backdrop, Window } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ children, toggle }) => {\n  useEffect(() => {\n    const onEscPush = e => {\n      if (e.code === 'Escape') {\n        toggle();\n      }\n    };\n\n    window.addEventListener('keydown', onEscPush);\n\n    return () => {\n      window.removeEventListener('keydown', onEscPush);\n    };\n  }, [toggle]);\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      toggle();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <Window>{children}</Window>\n    </Backdrop>,\n    modalRoot\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Li = styled.li`\n  display: flex;\n  font-size: 20px;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { useState } from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { Li } from './ContactListItem.styled';\nimport { Button } from '@chakra-ui/react';\n\nconst ContactListItem = ({ data }) => {\n  const { name, phone, id } = data;\n\n  const dispatch = useDispatch();\n\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  return (\n    <Li>\n      <p>\n        {name}: {phone}\n      </p>\n      <Button\n        type=\"button\"\n        onClick={e => {\n          dispatch(deleteContact(id));\n          setIsDeleting(true);\n        }}\n        disabled={isDeleting}\n        colorScheme=\"blackAlpha\"\n      >\n        {isDeleting ? (\n          <ThreeDots\n            height=\"10\"\n            width=\"42\"\n            radius=\"9\"\n            color=\"#ffffff\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClassName=\"\"\n            visible={true}\n          />\n        ) : (\n          <p>Delete</p>\n        )}\n      </Button>\n    </Li>\n  );\n};\n\nexport default ContactListItem;\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  width: 400px;\n  margin: 0 auto;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations';\nimport { useEffect } from 'react';\nimport ContactListItem from 'components/ContactListItem';\nimport { Ul } from './Contact.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Ul>\n      {visibleContacts.map(data => (\n        <ContactListItem key={data.id} data={data} />\n      ))}\n    </Ul>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  margin-top: 20px;\n`;\n\nexport const H1 = styled.h1`\n  margin-left: 500px;\n  font-size: 32px;\n`;\n","import { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { Modal } from 'components/Modal';\nimport { ContactList } from 'components/ContactList';\nimport { useState } from 'react';\nimport { Button } from '@chakra-ui/react';\nimport { AddIcon } from '@chakra-ui/icons';\nimport { Div, H1 } from './Contacts.styled';\n\nconst Contacts = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    setIsOpen(prevState => !prevState);\n  };\n\n  return (\n    <>\n      <Div>\n        <H1>Phone book</H1>\n        <Button\n          colorScheme=\"blackAlpha\"\n          onClick={toggle}\n          leftIcon={<AddIcon h={3} w={3} />}\n        >\n          New contact\n        </Button>\n      </Div>\n      {isOpen && (\n        <Modal toggle={toggle}>\n          <ContactForm toggle={toggle} />\n        </Modal>\n      )}\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["H1","styled","Form","Label","Inpt","Input","Btn","Button","P","Span","PasswordInput","useState","show","setShow","size","pr","type","name","variant","width","onClick","colorScheme","FormGenerator","onSubmit","onFilterChange","autoComplete","to","title","required","pattern","style","margin","onChange","selectContacts","state","contacts","items","selectVisibleContacts","filter","el","toLowerCase","includes","selectFilterValue","ContactForm","toggle","useSelector","dispatch","useDispatch","e","preventDefault","form","currentTarget","value","trim","phone","number","some","warning","addContact","reset","Filter","filterValue","target","write","Backdrop","Window","modalRoot","document","querySelector","Modal","children","useEffect","onEscPush","code","window","addEventListener","removeEventListener","createPortal","Li","data","id","isDeleting","setIsDeleting","deleteContact","disabled","height","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","Ul","ContactList","visibleContacts","fetchContacts","map","Div","isOpen","setIsOpen","prevState","leftIcon","h","w"],"sourceRoot":""}